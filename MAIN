//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <iostream> // biblioteca nativa do compilador
#include <string>   // bibloteca de strings
#include <cstring>  // biblioteca de caractere
#define max 100     // constante

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

struct Vehicles { // estrutura principal

	int id;                                     // id do veículo
	std::string vehicle_type;                   // tipo de veículo
	std::string license_plate;                  // placa ou matrícula
	std::string color;                          // cor do veículo
	std::string fuel_type;                      // tipo de combustível
	int year;                                   // ano de fabricacao
	int odometer;                               // valor atual do odometro
	float rental_rate;                          // valor do aluguel
	std::string available;                      // disponibilidade
	std::string transmission;                    // transmissão
	std::string model;                          // modelo 
	std::string brand;                          // marca
	std::string features;                       // informacoes adicionais
	
	Vehicles() : id(0), vehicle_type(""), license_plate(""), color(""), fuel_type(""), year(0), odometer(0),
                 rental_rate(0.0f), available(""), transmission(""), model(""), brand(""), features("") {}
                 
    // objetos da estrutura iniciados...
		
};

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

int total_added = 0;      // quantidade de veículos cadastrados.
Vehicles Dealership[max]; // array do tipo estrutura recebe o tamanho max de veículos cadastrados.

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void get_options(char& answer) { // procedimento para receber a resposta do utilizador sempre que queira continuar ou nao a tarefa.
	
	std::cout << "OPTION: ";
    std::cin >> answer;
    std::cout << "..." << std::endl << ".." << std::endl << "." << std::endl;
	
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void add_vehicle () {     // procedimento para cadastrar um veículo ao sistema.
	
	Vehicles New_Vehicle; // estrutura do tipo vehicles é criada para receber os dados do veículo recém cadastrado.
	char answer = 'Y';  // sim ou não para continuar.
	
	while (answer == 'Y') { // enquanto a resposta for Yes...
	
		//---------------------//
		//----ID do Veículo----//
		//---------------------//
		
		total_added++; // quantidade de veículos cadastrados é incrementado.
		
		New_Vehicle.id = total_added; // o id da estrutura recebe o valor total de veículos cadastrados.
		
		//---------------------//
		//---Tipo do Veículo---//
		//---------------------//
		
		int type_vehicle = 0; // variável para transitar pelo menu
		
		while (type_vehicle !=0 || type_vehicle != 1) { // enquanto type_vehicle for diferente de 0 ou 1...
		
			std::cout << "." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "..." << std::endl;
		
			std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|                INPUT THE VEHICLE TYPE                |" << std::endl;
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|1.CAR                                                 |" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << std::endl;
			std::cout << "OPTION: ";
			std::cin >> type_vehicle; // insere opcao escolhida.
			
			std::cout << "..." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "." << std::endl;
			
			if (type_vehicle == 1) { // se o tipo esolhido for carro...
				
				New_Vehicle.vehicle_type = "Car"; // o tipo do carro recebe a string na estrutura
				break;                            // sai do ciclo.
				
			} else { // do contrario...
				
					std::cout << "." << std::endl;
					std::cout << ".." << std::endl;
					std::cout << "..." << std::endl;
				
					std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
					std::cout << "|------------------------------------------------------|" << std::endl;
					std::cout << "|------------------------------------------------------|" << std::endl;
					std::cout << "|                                                      |" << std::endl;
					std::cout << "|              ERROR, INSERT A VALID TYPE              |" << std::endl; 
					std::cout << "|                                                      |" << std::endl;
					std::cout << "|------------------------------------------------------|" << std::endl;
					std::cout << "|------------------------------------------------------|" << std::endl; 
					
					std::cout << "..." << std::endl;
					std::cout << ".." << std::endl;
					std::cout << "." << std::endl;
					
				// exibe mensagem e retorna ao início do ciclo.
				
				}	
				
			}
			
		//---------------------//
		//---Matrícula/Placa---//
		//---------------------//
			
		std::string license_plate;
		
		std::cout << "." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "..." << std::endl;
	
		std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|               INPUT THE LICENSE PLATE                |" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << std::endl;
		std::cout << "OPTION: ";
		std::cin >> license_plate; // insere opcao escolhida.
		
		std::cout << "..." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "." << std::endl;
		
		while (license_plate.length() != 8) { // enquanto o numero de caracteres da string for diferente de 8...
	
			std::cout << "." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "..." << std::endl;
		
			std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|                ERROR, MAX 8 CHARACTERS               |" << std::endl; 
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl; 
			std::cout << std::endl;
			std::cout << "OPTION: ";
			std::cin >> license_plate; // insere opcao escolhida.
			
			std::cout << "..." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "." << std::endl;
			
			// exibe mensagem e retorna ao início do ciclo.
	
		}	
			
		std::cout << "." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "..." << std::endl;
	
		std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|              VEHICLE ADDED SUCCESSFULLY              |" << std::endl; 
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		
		std::cout << "..." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "." << std::endl;	
		
		New_Vehicle.license_plate = license_plate; // insere a variável na estrutura.
		Dealership[total_added] = New_Vehicle;     // insere a estrutura no vetor global na posicao do ultimo id inserido.
		
		// exibe mensagem e retorna a tela de menu principal.		
			
		std::cout << "." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "..." << std::endl;
	
		std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|                 Want to keep adding?                 |" << std::endl;
		std::cout << "|                    [Y]es or [N]o                     |" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		
		std::cout << std::endl;
		std::cout << "OPTION: ";
		std::cin >> answer; 
		
		std::cout << "..." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "." << std::endl;
		
		// ao termino da pesquisa é perguntando se o utiizador quer continuar.
		
		if (answer == 'N') { // caso não queira...
			
			break; // interrompe o ciclo e vai direto a tela de menu.
			
		} else { // sao responder corretamente...
		
			while (answer != 'Y' && answer != 'N') { // permanece no ciclo até responder devidamente...
				
				std::cout << "." << std::endl;
				std::cout << ".." << std::endl;
				std::cout << "..." << std::endl;
			
				std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|                                                      |" << std::endl;
				std::cout << "|  ERROR, INSERT [Y]es or [N]o if you want to continue |" << std::endl; 
				std::cout << "|                                                      |" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << std::endl;
				std::cout << "OPTION: ";
				std::cin >> answer; 
				
				// exibe mensagem e obriga o utilizador a preencher corretamente o campo.
				
				std::cout << "..." << std::endl;
				std::cout << ".." << std::endl;
				std::cout << "." << std::endl;
			
			}
			
		}
		 
	}
	
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void display_vehicle() { // procedimento para apresentar um veículo em particular pelo id.
	
	int idsearch = 0;   // id de pesquisa.
	bool found = false; // resultado da pesquisa.
	char answer = 'Y';  // sim ou não para continuar.
	
	while (answer == 'Y') { // enquanto a resposta for Yes...
	
		std::cout << "." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "..." << std::endl;
		
		std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|              INPUT THE VEHICLE ID NUMBER             |" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << std::endl;
		std::cout << "OPTION: ";
		std::cin >> idsearch;    // recebe o id de pesquisa.
		
		std::cout << "..." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "." << std::endl;
		
		for (int i=0; i<total_added; i++) { // ciclo para iterar sobre o vetor global.
			
			if (idsearch == Dealership[i + 1].id) { // se o id de pesquisa for igual ao id da estrutura na posicao do id de pesquisa...
				
				found = true; // resultado da pesquisa recebe verdadeiro.
				
				std::cout << "." << std::endl;
				std::cout << ".." << std::endl;
				std::cout << "..." << std::endl;
			
				std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|ID: " << idsearch << std::endl;  
				std::cout << "|TYPE: " << Dealership[i + 1].vehicle_type << std::endl;    
				std::cout << "|LICENSE PLATE: " << Dealership[i + 1].license_plate << std::endl;                        
				std::cout << "|                                                      |" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				
				std::cout << "..." << std::endl;
				std::cout << ".." << std::endl;
				std::cout << "." << std::endl;	
				
				// exibe os dados da estrutura.		
				
			}
			
		}
		
		if (found == false) { // se o resultado da pesquisa for falso...
			
			std::cout << "." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "..." << std::endl;
		
			std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|  No vehicles found in our system with the ID number  |" << std::endl;
			std::cout << "|                  Try Another ID                      |" << std::endl;
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			
			std::cout << "..." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "." << std::endl;
			
			// exibe mensagem e pede outro numero de id para pesquisar.
					
		}
			
		std::cout << "." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "..." << std::endl;
	
		std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|           Are you want to continue searching?        |" << std::endl;
		std::cout << "|                   [Y]es or [N]o                      |" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		
		std::cout << std::endl;
		std::cout << "OPTION: ";
		std::cin >> answer;      // insere a resposta para continuar o procedimento.
		
		std::cout << "..." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "." << std::endl;
		
		// ao termino da pesquisa é perguntando se o utiizador quer continuar.
		
		if (answer == 'N') { // caso não queira...
			
			break; // interrompe o ciclo e vai direto a tela de menu.
			
		} else { // sao responder corretamente...
		
			while (answer != 'Y' && answer != 'N') { // permanece no ciclo até responder devidamente...
				
				std::cout << "." << std::endl;
				std::cout << ".." << std::endl;
				std::cout << "..." << std::endl;
			
				std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|                                                      |" << std::endl;
				std::cout << "|  ERROR, INSERT [Y]es or [N]o if you want to continue |" << std::endl; 
				std::cout << "|                                                      |" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << "|------------------------------------------------------|" << std::endl;
				std::cout << std::endl;
				std::cout << "OPTION: ";
				std::cin >> answer; 
				
				// exibe mensagem e obriga o utilizador a preencher corretamente o campo.
				
				std::cout << "..." << std::endl;
				std::cout << ".." << std::endl;
				std::cout << "." << std::endl;
			
			}
			
		}
		
	}
	
}

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

int main(int argc, char** argv) {
	
	int menucursor = 0; // cursor do menu.
	
	while (menucursor != 3) { // enquanto o cursos for diferente de 3...
	
		// exibe tela de menu com opcoes.
		
		std::cout << "." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "..." << std::endl;
	
		std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|1.ADD A VEHICLE                                       |" << std::endl;
		std::cout << "|2.SEARCH A VEHICLE                                    |" << std::endl;
		std::cout << "|3.EXIT                                                |" << std::endl;
		std::cout << "|                                                      |" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << "|------------------------------------------------------|" << std::endl;
		std::cout << std::endl;
		std::cout << "OPTION: ";
		std::cin >> menucursor;  // insere a opcao desejada.
		
		std::cout << "..." << std::endl;
		std::cout << ".." << std::endl;
		std::cout << "." << std::endl;
			
		if (menucursor == 1) { // se o cursor do menu for 1...
			
			add_vehicle(); // invoca o procedimento de cadastro de veículos.
			
		} else if (menucursor == 2) { // se o cursor do menu for 2...
		
			display_vehicle(); // invoca o procedimento de exibicao de dados de veículos.
			
		} else if (menucursor == 3) { // se o cursor do menu for 3...
			
			break; // encerra o ciclo...
		
		} else { // do contrário
		
			std::cout << "." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "..." << std::endl;
		
			std::cout << "<<<<<<<<<<<<<<<.:[RENT.SYSTEM.SOFTWARE]:.>>>>>>>>>>>>>>>" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|             ERROR, INSERT A VALID NUMBER.            |" << std::endl; // exibe mensagem.
			std::cout << "|                                                      |" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			std::cout << "|------------------------------------------------------|" << std::endl;
			
			std::cout << "..." << std::endl;
			std::cout << ".." << std::endl;
			std::cout << "." << std::endl;
			
		}
		
	}
	
	// quit message...
	
	std::cout << "." << std::endl;
	std::cout << ".." << std::endl;
	std::cout << "..." << std::endl;
	
	std::cout << "............................................................................" << std::endl;
	std::cout << "[Thank you for exploring our extensive range of vehicles. " << std::endl;
	std::cout << "We look forward to assisting you in finding the perfect vehicle that suits your needs and preferences." << std::endl;
	std::cout << "Feel free to reach out to our friendly team for any further inquiries. Safe travels and happy driving!]" << std::endl;
	std::cout << "............................................................................" << std::endl;
	std::cout << "[CONTACT]..................................................................." << std::endl;
	std::cout << "............................................................................" << std::endl;
	std::cout << "LINKEDIN: https://www.linkedin.com/in/rafael-lopes-b8606a272/" << std::endl;
	std::cout << "GITHUB: https://github.com/R4F43LL-D3VB3GINN3R/CAR-DEALERSHIP-C-/blob/main/MAIN" << std::endl;	
	std::cout << "EMAIL: @rafalbuquerquecra@gmail.com " << std::endl; 
	std::cout << "all rights reserved." << std::endl; 
	std::cout << "............................................................................" << std::endl;
	
	std::cout << "..." << std::endl;
	std::cout << ".." << std::endl;
	std::cout << "." << std::endl;
	std::cout << "." << std::endl;
	std::cout << ".." << std::endl;
	std::cout << "..." << std::endl;
	
	return 0;
}
